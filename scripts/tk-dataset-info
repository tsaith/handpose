#!/usr/bin/python3

"""
Show the information of datasets
"""

import os
import sys
import glob
import argparse

def find_ids(path, id_prefix):
    # Find out the ID of subjects
    ids = []
    path_pattern = "{}/*{}*.csv".format(path, id_prefix)
    for full_path in glob.glob(path_pattern):
        fname = os.path.basename(full_path)
        fields = fname.split("_")
        for field in fields:
            if id_prefix in field:
                ids.append(field.replace(id_prefix, ''))
    ids = list(set(ids))
    return ids

def find_gestureInst(path):
    instanceList = []
    gestureList = []
    path_pattern = "{}/*.csv".format(path)
    for full_path in glob.glob(path_pattern):
        fname = os.path.basename(full_path)
        fields = fname.split("_")
        if ((fields[0] in gestureList) == 0):
            gestureList.append(fields[0])
            instanceList.append(0)
        gestureIdx = gestureList.index(fields[0])
        fileHandle = open(full_path, 'r')
        instanceList[gestureIdx] += len(fileHandle.readlines())
        fileHandle.close()

    return gestureList, instanceList

# Construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-r", "--root", default=None, help="Root path to the datasets")
args = vars(ap.parse_args())

# Directory names of training and testing datasets
train_dir = "train"
test_dir = "test"

# Root path
if args['root'] is None:
    root_path = "~/projects/handpose/data/vib"
else:
    root_path = args['root']
root_path = os.path.expanduser(root_path)

# Directory paths
train_path = "{}/{}".format(root_path, train_dir)
test_path = "{}/{}".format(root_path, test_dir)

# ID prefix
id_prefix = "sis"

# Employment ID of Subjects
train_ids = []
test_ids = []
# gesture instance of Subjects
train_inst = []
test_inst = []

print("Start to arrange the datasets...")
print("training path is {}".format(train_path))
print("testing path is {}".format(test_path))

# Check the paths
if not os.path.exists(train_path):
    print("There is no training directory: {}".format(train_path))
    print("Run stops.")
    sys.exit(0)

if not os.path.exists(test_path):
    print("There is no testing directory: {}".format(test_path))
    print("Run stops.")
    sys.exit(0)

# Search the ID of subjects
train_ids = find_ids(train_path, id_prefix)
test_ids = find_ids(test_path, id_prefix)
num_train_subjects = len(train_ids)
num_test_subjects = len(test_ids)

# Search gesture instance of subjects
gestListTrain, instListTrain = find_gestureInst(train_path)
gestListTest, instListTest  = find_gestureInst(test_path)

print("Info. of subjects:")
print("    train:")
print("        subjects=\t{}".format(num_train_subjects))
for i in range(len(gestListTrain)):
    print("        {}\t=\t{}".format(gestListTrain[i], instListTrain[i]))
print("    test".format(num_test_subjects))
print("        subjects=\t{}".format(num_test_subjects))
for i in range(len(gestListTest)):
    print("        {}\t=\t{}".format(gestListTest[i], instListTest[i]))
