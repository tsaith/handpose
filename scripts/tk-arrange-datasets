#!/usr/bin/python3

"""
Initailize a repository on Bitbucket
"""

import os
import sys
import argparse

# Construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-r", "--root", default=None, help="Root path to the datasets")
args = vars(ap.parse_args())

# keywords
train_keywords = ['1471', '1540', '3103', '4156', '4733', '4751',
                  '4924', '10038', '10044', '10053', '10062',
                  '10069', '10075', '10078',
                  '10083', '10084', '10085', '10089', '10090', '10091']

test_keywords = ['3949', '4159', '4574', '4583', '4802', '4828',
                 '4877', '4909', '4946', '4987',
                 '10003', '10007', '10018', '10024', '10051',
                 '10058', '10067', '10074', '10077', '10079',
                 '10088', '10093']

# Root path
if args['root'] is None:
    root_path = "~/projects/handpose/data/vib"
else:
    root_path = args['root']
root_path = os.path.expanduser(root_path)

# Directory names of training and testing datasets
train_dir = "train"
test_dir = "test"

# Directory paths
train_path = "{}/{}".format(root_path, train_dir)
test_path = "{}/{}".format(root_path, test_dir)

print("Start to arrange the datasets...")
print("training path is {}".format(train_path))
print("testing path is {}".format(test_path))

# Checking the paths
if not os.path.exists(train_path):
    print("There is no training directory: {}".format(train_path))
    print("Run stops.")
    sys.exit(0)

if not os.path.exists(test_path):
    print("There is no testing directory: {}".format(test_path))
    print("Run stops.")
    sys.exit(0)

# Move files under testing directory to training directory
for kw in train_keywords:
    cmd = "mv {}/*{}* {}/ 2>/dev/null".format(test_path, kw, train_path)
    #print(cmd)
    os.system(cmd)

# Move files under training directory to testing directory
for kw in test_keywords:
    cmd = "mv -f {}/*{}* {}/ 2>/dev/null".format(train_path, kw, test_path)
    #print(cmd)
    os.system(cmd)

print("done.")




