#!/usr/bin/python3

"""
Initailize a repository on Bitbucket
"""

import os
import sys
import glob
import argparse

#Find out ID of subjects from path.
def find_ids(path):
    tmp_list = []
    path_pattern = "{}/*.csv".format(path)
    for full_path in glob.glob(path_pattern):
        fname = os.path.basename(full_path)
        fields = fname.split("_")
        tmp_list.append(fields[1][3:])
    return set(tmp_list)

# Construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-r", "--root", default=None, help="Root path to the datasets")
args = vars(ap.parse_args())

# keywords
test_keywords = ['3949', '4159', '4574', '4583', '4802',
                 '4828', '4877', '4909', '4946', '4987',
                 '10003', '10007', '10018', '10024', '10039',
                 '10051', '10058', '10067', '10074', '10077',
                 '10079', '10088', '10082', '10093',]
train_keywords = []

# Directory names of training and testing datasets
train_dir = "train"
test_dir = "test"

# Root path
if args['root'] is None:
    root_path = "~/projects/handpose/data/vib"
else:
    root_path = args['root']
root_path = os.path.expanduser(root_path)

# Directory paths
train_path = "{}/{}".format(root_path, train_dir)
test_path = "{}/{}".format(root_path, test_dir)

print("Start to arrange the datasets...")
print("training path is {}".format(train_path))
print("testing path is {}".format(test_path))

# Checking the paths    
if not os.path.exists(train_path):
    print("[ERR]There is no training directory: {}".format(train_path))
    print("Run stops.")
    sys.exit(0)

if not os.path.exists(test_path):
    print("[ERR]There is no testing directory: {}".format(test_path))
    print("Run stops.")
    sys.exit(0)

# Find train_keywords(= all ids - test id)
train_keywords = (find_ids(train_path) | find_ids(test_path)) - set(test_keywords)

# Move files under train directory to test directory
for kw in test_keywords:
    cmd = "mv -f {}/*{}* {}/ 2>/dev/null".format(train_path, kw, test_path)
    #print(cmd)
    os.system(cmd)
    
# Move files under test directory to train directory
for kw in train_keywords:
    cmd = "mv -f {}/*{}* {}/ 2>/dev/null".format(test_path, kw, train_path)
    #print(cmd)
    os.system(cmd)
    
print("done.")




